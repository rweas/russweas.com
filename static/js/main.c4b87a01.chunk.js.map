{"version":3,"sources":["components/Nav.js","App.js","serviceWorker.js","index.js","russweas.svg"],"names":["Nav","className","role","aria-label","href","src","logo","width","height","alt","aria-expanded","data-target","aria-hidden","id","target","rel","icon","faFilePdf","size","faGithub","faLinkedin","faTerminal","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"iSAkDeA,MA5Cf,WACI,OACI,yBAAKC,UAAU,wBAAwBC,KAAK,aAAaC,aAAW,mBAChE,yBAAKF,UAAU,gBACX,uBAAGA,UAAU,cAAcG,KAAK,KAC5B,yBAAKC,IAAKC,IAAMC,MAAO,IAAKC,OAAQ,IAAKC,IAAI,SADjD,gBAIA,uBAAGP,KAAK,SAASD,UAAU,uBAAuBE,aAAW,OAAOO,gBAAc,QAAQC,cAAY,sBAClG,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAG1B,yBAAKC,GAAG,qBAAqBZ,UAAU,eACnC,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACf,uBAAGA,UAAU,cAAcG,KAAK,cACxBU,OAAO,SACPC,IAAI,uBACJ,kBAAC,IAAD,CAAiBC,KAAMC,IAAWC,KAAK,QAE3C,uBAAGjB,UAAU,cAAcG,KAAK,+BAC5BU,OAAO,SACPC,IAAI,uBACJ,kBAAC,IAAD,CAAiBC,KAAMG,IAAUD,KAAK,QAE1C,uBAAGjB,UAAU,cAAcG,KAAK,oCAC5BU,OAAO,SACPC,IAAI,uBACJ,kBAAC,IAAD,CAAiBC,KAAMI,IAAYF,KAAK,QAE5C,uBAAGjB,UAAU,cAAcG,KAAK,6BAC5BU,OAAO,SACPC,IAAI,uBACJ,kBAAC,IAAD,CAAiBC,KAAMK,IAAYH,KAAK,aCMrDI,MA1Cf,WACE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,MAEA,4BAAQA,UAAU,cAEhB,wBAAIA,UAAU,2BAAd,mBCAYsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBErInBC,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.c4b87a01.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './russweas.svg';\nimport logo from '../russweas.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport {faFilePdf, faTerminal} from \"@fortawesome/free-solid-svg-icons\";\nfunction Nav() {\n    return (\n        <nav className=\"navbar is-transparent\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    <img src={logo} width={112} height={110} alt=\"asdf\" />\n                    Russell Weas\n                </a>\n                <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                </a>\n            </div>\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                    <a className=\"navbar-item\" href=\"/Resume.pdf\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faFilePdf} size=\"2x\" />\n                        </a>\n                        <a className=\"navbar-item\" href=\"https://www.github.com/rweas\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                        </a>\n                        <a className=\"navbar-item\" href=\"https://www.linkedin.com/in/rweas\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n                        </a>\n                        <a className=\"navbar-item\" href=\"https://notes.russweas.com\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={faTerminal} size=\"2x\" />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport logo from './russweas.svg';\nimport './App.scss';\nimport Nav from './components/Nav.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n\n      <header className=\"App-header\">\n      \n        <h1 className=\"title has-text-centered\">russweas.com</h1>\n\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <p>\n          Welcome to russweas.com.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://notes.russweas.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          CS 101 Notes\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/rweas\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub @rweas\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"/Resume.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n         Resume\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/russweas.733dbaa7.svg\";"],"sourceRoot":""}